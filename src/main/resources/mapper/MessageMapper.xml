<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fosss.community.dao.MessageMapper">
    <sql id="selectFields">
        id, from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <!--查询当前用户的会话列表,针对每个会话只返回一条最新的私信.   from_id=1为系统通知   子查询：查询每个会话最新的一条私信id-->
    <select id="selectConversations" resultType="com.fosss.community.entity.Message">
        select
        <include refid="selectFields"/>
        from message
        where
        id in
        (
        SELECT DISTINCT MAX(id)
        FROM message
        WHERE STATUS != 2
        AND from_id != 1
        and (FROM_id = #{userId} or to_id = #{userId})
        GROUP BY conversation_id
        )
        order by create_time desc
        limit #{offset},#{limit}
    </select>

    <!--查询当前用户的会话数量  先子查询出每个会话最新的一条私信id，再统计其数量-->
    <select id="selectConversationCount" resultType="java.lang.Integer">
        select count(m.maxId)
        from (
                 SELECT DISTINCT MAX(id) as maxId
                 FROM message
                 WHERE STATUS != 2
                   AND from_id != 1
                   and (FROM_id = #{userId} or to_id = #{userId})
                 GROUP BY conversation_id
             ) as m
    </select>

    <!--查询某个会话所包含的私信列表-->
    <select id="selectLetters" resultType="com.fosss.community.entity.Message">
        select
        <include refid="selectFields"/>
        from message
        where status!=2 and from_id !=1
        and conversation_id =#{conversationId}
        order by create_time desc
        limit #{offset},#{limit}
    </select>

    <!--查询某个会话所包含的私信数量-->
    <select id="selectLetterCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where status != 2
          and from_id != 1
          and conversation_id = #{conversationId}
    </select>

    <!--查询未读私信的数量-->
    <select id="selectLetterUnreadCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where status = 0
        and from_id != 1
        and to_id = #{userId}
        <if test="conversationId != null">
            and conversation_id=#{conversationId}
        </if>
    </select>

    <!--修改状态-->
    <update id="updateMessageStatus">
        update message
        set status=#{status} where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>
</mapper>
















