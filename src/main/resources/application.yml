server:
  port: 8081
  servlet:
    context-path: /community
spring:
  thymeleaf:
    cache: false  # 关闭thymeleaf缓存
  datasource: # 数据库配置
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      idle-timeout: 30000  # 空闲超时时间
      maximum-pool-size: 15 #最大连接数量
      minimum-idle: 5 #最少连接数
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:mysql://192.168.60.129:3306/community?characterEncoding=utf-8&useSSL=false&serverTimezone=Hongkong
    username: root
    password: 123456
  redis: #配置redis
    database: 1  #用那个库，默认16个，默认使用第1个
    host: 192.168.60.129
    port: 6379
  kafka:
    bootstrap-servers: 192.168.60.129:9092
    consumer:
      group-id: community-consumer-group
      enable-auto-commit: true
      auto-commit-interval: 200  # 设置自动提交offset
  elasticsearch: # Elasticsearch
    uris: 192.168.60.129:9200
  task:
    execution: # spring普通线程池配置
      pool:
        core-size: 5 # 主要使用数
        max-size: 10 # 最大扩容使用数
        queue-capacity: 100 # 队列容量，超过max-size时，将任务放到队列中，队列的容量
    scheduling: # spring 能使用定时任务的线程池
      pool:
        size: 5
  # quartz配置
  quartz:
    job-store-type: jdbc
    scheduler-name: communityScheduler
    properties:
      org:
        quartz:
          scheduler:
            instanceId: AUTO
          jobStore:
            class: org.springframework.scheduling.quartz.LocalDataSourceJobStore
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
            tablePrefix: QRTZ_
            isClustered: true
            clusterCheckinInterval: 10000
          threadPool:
            class: org.quartz.simpl.SimpleThreadPool
            threadCount: 10
            threadPriority: 5
    jdbc:
      initialize-schema: never
#  mail: # 邮件 配置在yaml文件中
#    host: smtp.163.com
#    username: ggrxhskd@163.com
#    port: 25
#    password:
mybatis:
  configuration:
    mapUnderscoreToCamelCase: true   #转驼峰
    useGeneratedKeys: true  #如果插入的表以自增列为主键，则允许 JDBC 支持自动生成主键，并可将自动生成的主键返回。
  mapper-locations: classpath:mapper/*.xml  #映射文件位置
  type-aliases-package: com.fosss.community.entity #配置文件中实体类不用写包名

#日志级别及存放位置
logging:
  level:
    com.fosss.community: debug
#  file:
#    path: E:/PROJECT/community/logs

# 自定义配置
community:
  path:
    domain: http://localhost  #域名
    uploadPath: E:/PROJECT/community/avaterImgs
